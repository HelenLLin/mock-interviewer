/* src/styles/page.module.css - Terminal styles reverted to original */

.container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  color: var(--text-primary-dark); /* Will use the themed text color from globals.css */
  /* The background is now handled by the body's mesh gradient */
  background-color: transparent;
  position: relative; /* To ensure content stacks above body's pseudo-elements if any z-index issues */
  z-index: 1; /* Content above background blobs */
}

.navbar {
  width: 100%;
  padding: 1rem 1.5rem;
  /* Navbar background: could be transparent to show mesh, or a very subtle semi-transparent color, or themed */
  background-color: rgba(244, 241, 233, 0.3); /* Example: very subtle, semi-transparent version of base, or var(--nav-background-dark) with alpha */
  backdrop-filter: blur(5px); /* Optional: frosted glass effect for navbar */
  border-bottom: 1px solid rgba(166, 157, 230, 0.2); /* Subtle border with one of your accent colors */
  flex-shrink: 0;
  position: relative; /* Or sticky, etc. */
  z-index: 2; /* Navbar above general container content if needed */
}

.navContent {
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.logoContainer {
  font-family: var(--font-fira-code);
  font-weight: bold;
}

.logoLink {
    color: var(--text-primary-dark); /* Themed */
    font-size: 1.5rem;
    text-decoration: none;
}

.navLinks {
  font-family: var(--font-fira-code);
  display: flex;
  gap: 2rem;
}

.navLink {
  color: var(--text-secondary-dark); /* Themed */
  text-decoration: none;
  transition: color 0.2s ease-in-out;
  font-size: 0.875rem;
}
.navLink:hover {
  color: var(--text-primary-dark); /* Themed */
}

.navActions {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.loginButton {
  font-family: var(--font-fira-code);
  font-size: 0.875rem;
  font-weight: 500;
  background-color: var(--button-background-dark); /* Themed */
  color: var(--button-text-dark); /* Themed */
  padding: 0.5rem 1rem;
  border-radius: 9999px;
  text-decoration: none;
  transition: background-color 0.2s ease-in-out;
}
.loginButton:hover {
  background-color: var(--button-hover-dark); /* Themed */
}

.mainContent {
  flex-grow: 1;
  display: flex;
  flex-direction: row;
  align-items: stretch;
  padding: 2rem 1.5rem;
  max-width: 1280px;
  margin: 0 auto;
  gap: 2rem;
  width: 100%;
}

.mainText {
  flex-basis: 50%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  text-align: left;
  padding-right: 1rem;
}

.terminalContainer {
  flex-basis: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  padding-left: 1rem;
}

/* --- Terminal CSS - Reverted to Original --- */
.terminalFrame {
  width: 100%;
  max-width: 600px;
  background-color: #1e1e1e; /* Original */
  border-radius: 8px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3); /* Original */
  overflow: hidden;
  display: flex;
  flex-direction: column;
  height: 400px;
}

.terminalHeader {
  background-color: #333; /* Original */
  padding: 0.5rem 1rem;
  display: flex;
  align-items: center;
  position: relative;
  border-bottom: 1px solid #444; /* Original */
  flex-shrink: 0;
}

.terminalDots {
  display: flex;
  gap: 0.5rem;
  position: absolute;
  left: 1rem;
  top: 50%;
  transform: translateY(-50%);
}

.dot {
  width: 12px;
  height: 12px;
  border-radius: 50%;
}

.red { background-color: #ff5f56; } /* Original */
.yellow { background-color: #ffbd2e; } /* Original */
.green { background-color: #27c93f; } /* Original */

.terminalTitle {
  color: #ccc; /* Original */
  font-family: sans-serif;
  font-size: 0.8rem;
  text-align: center;
  flex-grow: 1;
  padding-left: 40px;
}

.terminalBody {
  flex-grow: 1;
  padding: 1rem;
  background-color: #000000; /* Original */
  color: #D4D4D4; /* Original */
  font-family: 'Fira Code', Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
  font-size: 0.9em;
  line-height: 1.6;
  overflow-y: auto;
}

.terminalBody > div > pre {
    margin: 0 !important;
    padding: 0 !important;
    background-color: transparent !important;
    white-space: pre-wrap !important;
    word-break: break-word !important;
}
/* --- End of Terminal CSS --- */

.motto {
  font-family: var(--font-fira-code);
  font-weight: 700;
  font-size: 3.75rem;
  color: var(--text-primary-dark); /* Themed */
  margin-bottom: 1.5rem;
  text-shadow: none;
  text-align: left;
  line-height: 1.2;
}

.subheadline {
  font-family: var(--font-inter);
  font-size: 1.125rem;
  color: var(--text-secondary-dark); /* Themed */
  margin-bottom: 2.5rem;
  max-width: 500px;
  text-align: left;
  margin-left: 0;
  margin-right: 0;
}

.ctaContainer {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.ctaButton {
  display: inline-block;
  font-family: var(--font-fira-code);
  font-size: 1rem;
  font-weight: 700;
  background-color: var(--button-background-dark); /* Themed */
  color: var(--button-text-dark); /* Themed */
  padding: 0.75rem 1.5rem;
  border-radius: 9999px;
  text-decoration: none;
  transition: background-color 0.2s ease-in-out;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  text-align: center;
}
.ctaButton:hover {
  background-color: var(--button-hover-dark); /* Themed */
}

@media (max-width: 768px) {
  .mainContent {
    flex-direction: column;
    align-items: center;
    padding: 1.5rem;
  }

  .mainText {
    flex-basis: auto;
    width: 100%;
    align-items: center;
    text-align: center;
    margin-bottom: 2rem;
    padding-right: 0;
  }

  .terminalContainer {
      flex-basis: auto;
      width: 100%;
      max-width: 500px;
      padding-left: 0;
  }

  .terminalFrame { /* This will override the height: 400px for smaller screens */
      height: 350px;
  }

  .motto {
    font-size: 2.5rem;
    text-align: center;
  }
  .subheadline {
    font-size: 1rem;
    text-align: center;
    margin-left: auto;
    margin-right: auto;
  }

  .ctaContainer {
      justify-content: center;
  }

  .navLinks {
      display: none;
  }
}

/* Add this to your globals.css or a relevant component's CSS */
/* Apply this class to the body or your main page container */
.mesh-gradient-background {
  background-color: #FAF7F2; /* Base color - a very light cream/off-white */
  position: relative;
  overflow: hidden; /* Important to contain the large gradients */
  min-height: 100vh; /* Ensure it covers the viewport */
}

.mesh-gradient-background::before,
.mesh-gradient-background::after,
.mesh-gradient-background > div.gradient-shape { /* You can use pseudo-elements or dedicated divs */
  content: "";
  position: absolute;
  border-radius: 50%; /* Makes them circular */
  opacity: 0.5; /* Adjust for desired intensity */
  mix-blend-mode: screen; /* Or 'multiply', 'overlay', 'soft-light' - experiment! */
  filter: blur(80px); /* The main blur effect - adjust value */
  z-index: 1; /* Below main content */
}

/* Example: A purple blob */
.mesh-gradient-background::before {
  width: 500px; /* Adjust size */
  height: 500px; /* Adjust size */
  background: radial-gradient(circle, #B8A6D5 0%, transparent 70%); /* Lavender to transparent */
  top: -150px;  /* Adjust position */
  left: -100px; /* Adjust position */
}

/* Example: A blue blob */
.mesh-gradient-background::after {
  width: 600px;
  height: 600px;
  background: radial-gradient(circle, #A0C3D8 0%, transparent 70%); /* Soft blue to transparent */
  bottom: -200px;
  right: -150px;
  opacity: 0.6;
}

/* Example: A pink/orange blob (using a separate div for more control if needed) */
/* In your HTML: <div class="mesh-gradient-background"> <div class="gradient-shape orange"></div> ...rest of content... </div> */
.mesh-gradient-background > div.gradient-shape.orange {
  width: 450px;
  height: 450px;
  background: radial-gradient(circle, #F5CEC7 0%, transparent 70%); /* Muted pink/orange */
  top: 50%;
  left: 50%;
  transform: translate(-70%, -30%); /* Adjust for positioning */
  opacity: 0.4;
}

/* Your main content needs to be above these blurred shapes */
.container { /* Your existing main container */
  position: relative;
  z-index: 2; /* Ensure content is above the gradient shapes */
  /* Make its background transparent if the mesh is on the body or a parent wrapper */
  /* background-color: transparent; */
}